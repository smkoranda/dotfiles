# see https://github.com/sigoden/aichat/blob/main/config.example.yaml

model: openai
temperature: null                # Set default temperature parameter (0, 1)
top_p: null                      # Set default top-p parameter, with a range of (0, 1) or (0, 2) depending on the model


# ---- behavior ----
stream: true                     # Controls whether to use the stream-style API.
save: true                       # Indicates whether to persist the message
keybindings: emacs               # Choose keybinding style (emacs, vi)
editor: hx                     # Specifies the command used to edit input buffer or session. (e.g. vim, emacs, nano).
wrap: no                         # Controls text wrapping (no, auto, <max-width>)
wrap_code: false                 # Enables or disables wrapping of code blocks


# ---- function-calling ----
# Visit https://github.com/sigoden/llm-functions for setup instructions
function_calling: true           # Enables or disables function calling (Globally).
mapping_tools:                   # Alias for a tool or toolset
  fs: 'fs_cat,fs_ls,fs_mkdir,fs_rm,fs_write'
use_tools: null                  # Which tools to use by default. (e.g. 'fs,web_search')


# ---- prelude ----
repl_prelude:  null              # Set a default role or session for REPL mode (e.g. role:<name>, session:<name>, <session>:<role>)
cmd_prelude:  "role:%shell%"     # Set a default role or session for CMD mode (e.g. role:<name>, session:<name>, <session>:<role>)
agent_prelude: null              # Set a session to use when starting a agent (e.g. temp, default)


# ---- session ----
# Controls the persistence of the session. if true, auto save; if false, not save; if null, asking the user
save_session: null
# Compress session when token count reaches or exceeds this threshold
compress_threshold: 4000
# Text prompt used for creating a concise summary of session message
summarize_prompt: 'Summarize the discussion briefly in 200 words or less to use as a prompt for future context.'
# Text prompt used for including the summary of the entire session
summary_prompt: 'This is a summary of the chat history as a recap: '

# Whether to save shell execution command to the history file
save_shell_history: true                    

# ---- RAG ----
rag_embedding_model: null 
rag_reranker_model: null  
rag_top_k: 5
rag_chunk_size: null 
rag_chunk_overlap: null  
## template
rag_template:
  Answer the query based on the context while respecting the rules. (user query, some textual context and rules, all inside xml tags)

  <context>
  __CONTEXT__
  </context>

  <rules>
  - If you don't know, just say so.
  - If you are not sure, ask for clarification.
  - Answer in the same language as the user query.
  - If the context appears unreadable or of poor quality, tell the user then answer as best as you can.
  - If the answer is not in the context but you think you know the answer, explain that to the user then answer with your own knowledge.
  - Answer directly and without using xml tags.
  </rules>

  <user_query>
  __INPUT__
  </user_query>

## document loaders
document_loaders:
  # You can add custom loaders using the following syntax:
  #   <file-extension>: <command-to-load-the-file>
  # Note: Use `$1` for input file and `$2` for output file. If `$2` is omitted, use stdout as output.
  pdf: 'pdftotext $1 -'                         # Load .pdf file, see https://poppler.freedesktop.org to set up pdftotext
  docx: 'pandoc --to plain $1'                  # Load .docx file, see https://pandoc.org to set up pandoc
  jina: 'curl -fsSL https://r.jina.ai/$1 -H "Authorization: Bearer <jina_api_key>"'
  # Load a git repo with https://github.com/bodo-run/yek
  git: >
    sh -c "yek $1 --json | jq '[.[] | { path: .filename, contents: .content }]'"

# ---- appearence ----
highlight: true                  # Controls syntax highlighting
light_theme: false               # Activates a light color theme when true. env: AICHAT_LIGHT_THEME
# Custom REPL left/right prompts, see https://github.com/sigoden/aichat/wiki/Custom-REPL-Prompt for more details
left_prompt:
  '{color.green}{?session {?agent {agent}>}{session}{?role /}}{!session {?agent {agent}>}}{role}{?rag @{rag}}{color.cyan}{?session )}{!session >}{color.reset} '
right_prompt:
  '{color.purple}{?session {?consume_tokens {consume_tokens}({consume_percent}%)}{!consume_tokens {consume_tokens}}}{color.reset}'

# ---- server ----
serve_addr:: 127.0.0.1:8000
user_agent: null    # Set User-Agent HTTP header, use `auto` for aichat/<current-version>

# ---- model data ----
sync_models_url: https://cdn.jsdelivr.net/gh/sigoden/aichat@main/models.yaml

# ---- clients ----
clients:
- type: openai
  api_key: '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'
  api_base: https://api.openai.com/v1

- type: openai-compatible
  name: ollama
  api_base: http://localhost:11434/v1
  api_key: ollama
  models:
    - name: nomic-embed-text
      type: embedding
      default_chunk_size: 1000
      max_batch_size: 50

- type: openai-compatible
  name: jina
  api_base: https://api.jina.ai/v1
  api_key: 'jina_e2d5a1e42d214a2492cbb577d47581c9ZSPtSGwahkMd9Pq9Djr_Ymqltlu2'
